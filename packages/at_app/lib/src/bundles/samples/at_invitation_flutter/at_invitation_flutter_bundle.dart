// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: prefer_single_quotes, public_member_api_docs, lines_longer_than_80_chars, implicit_dynamic_list_literal, implicit_dynamic_map_literal

import 'package:mason/mason.dart';

final atInvitationFlutterBundle = MasonBundle.fromJson(<String, dynamic>{
  "files": [
    {
      "path": "lib/constants.dart",
      "data":
          "Y2xhc3MgTWl4ZWRDb25zdGFudHMgewogIHN0YXRpYyBjb25zdCBTdHJpbmcgY29va2llUGFnZSA9ICdodHRwczovL2F0c2lnbi5kZXYvc2FtcGxlcy9hdF9pbnZpdGF0aW9uX2ZsdXR0ZXInOwp9Cg==",
      "type": "text"
    },
    {
      "path": "lib/home_screen.dart",
      "data":
          "aW1wb3J0ICdwYWNrYWdlOmF0X2FwcF9mbHV0dGVyL2F0X2FwcF9mbHV0dGVyLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXRfaW52aXRhdGlvbl9mbHV0dGVyL2F0X2ludml0YXRpb25fZmx1dHRlci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTphdF9jbGllbnRfbW9iaWxlL2F0X2NsaWVudF9tb2JpbGUuZGFydCc7CmltcG9ydCAnY29uc3RhbnRzLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6dW5pX2xpbmtzL3VuaV9saW5rcy5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOnVybF9sYXVuY2hlci91cmxfbGF1bmNoZXIuZGFydCc7CmltcG9ydCAncGFja2FnZTphdF91dGlscy9hdF9sb2dnZXIuZGFydCc7CgpjbGFzcyBIb21lU2NyZWVuIGV4dGVuZHMgU3RhdGVmdWxXaWRnZXQgewogIGNvbnN0IEhvbWVTY3JlZW4oe0tleT8ga2V5fSkgOiBzdXBlcihrZXk6IGtleSk7CgogIEBvdmVycmlkZQogIF9Ib21lU2NyZWVuU3RhdGUgY3JlYXRlU3RhdGUoKSA9PiBfSG9tZVNjcmVlblN0YXRlKCk7Cn0KCmNsYXNzIF9Ib21lU2NyZWVuU3RhdGUgZXh0ZW5kcyBTdGF0ZTxIb21lU2NyZWVuPiB7CiAgZmluYWwgQXRTaWduTG9nZ2VyIF9sb2dnZXIgPSBBdFNpZ25Mb2dnZXIoJ1NlY29uZCBTY3JlZW4nKTsKICBBdENsaWVudFNlcnZpY2U/IGF0Q2xpZW50U2VydmljZTsKICBTdHJpbmcgYWN0aXZlQXRTaWduID0gJyc7CiAgR2xvYmFsS2V5PE5hdmlnYXRvclN0YXRlPiBzY2FmZm9sZEtleSA9IEdsb2JhbEtleSgpOwogIFN0cmluZyBjaGF0V2l0aEF0U2lnbiA9ICcnOwogIGJvb2wgc2hvd09wdGlvbnMgPSBmYWxzZTsKCiAgLy8gZm9yIGdvdXAgY2hhdAogIFN0cmluZyBncm91cElkID0gJyc7CiAgU3RyaW5nIG1lbWJlcjEgPSAnJzsKICBTdHJpbmcgbWVtYmVyMiA9ICcnOwoKICAvLy8gR2V0IHRoZSBBdENsaWVudE1hbmFnZXIgaW5zdGFuY2UKICB2YXIgYXRDbGllbnRNYW5hZ2VyID0gQXRDbGllbnRNYW5hZ2VyLmdldEluc3RhbmNlKCk7CiAgQG92ZXJyaWRlCiAgdm9pZCBpbml0U3RhdGUoKSB7CiAgICBpbml0aWFsaXplSW52aXRhdGlvbldpZGdldCgpOwogICAgc2NhZmZvbGRLZXkgPSBHbG9iYWxLZXk8TmF2aWdhdG9yU3RhdGU+KCk7CiAgICBfaGFuZGxlSW5jb21pbmdMaW5rcygpOwogICAgc3VwZXIuaW5pdFN0YXRlKCk7CiAgfQoKICBAb3ZlcnJpZGUKICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsKICAgIHJldHVybiBTY2FmZm9sZCgKICAgICAga2V5OiBzY2FmZm9sZEtleSwKICAgICAgcmVzaXplVG9Bdm9pZEJvdHRvbUluc2V0OiBmYWxzZSwKICAgICAgYXBwQmFyOiBBcHBCYXIodGl0bGU6IGNvbnN0IFRleHQoJ1NlY29uZCBTY3JlZW4nKSksCiAgICAgIGJvZHk6IFNpbmdsZUNoaWxkU2Nyb2xsVmlldygKICAgICAgICBjaGlsZDogQ29sdW1uKAogICAgICAgICAgY3Jvc3NBeGlzQWxpZ25tZW50OiBDcm9zc0F4aXNBbGlnbm1lbnQuY2VudGVyLAogICAgICAgICAgY2hpbGRyZW46IFsKICAgICAgICAgICAgY29uc3QgU2l6ZWRCb3goCiAgICAgICAgICAgICAgaGVpZ2h0OiAyMC4wLAogICAgICAgICAgICApLAogICAgICAgICAgICBDb250YWluZXIoCiAgICAgICAgICAgICAgcGFkZGluZzogY29uc3QgRWRnZUluc2V0cy5vbmx5KHRvcDogMjAuMCwgYm90dG9tOiAyMC4wKSwKICAgICAgICAgICAgICBjaGlsZDogVGV4dCgKICAgICAgICAgICAgICAgICdXZWxjb21lICRhY3RpdmVBdFNpZ24hJywKICAgICAgICAgICAgICAgIHN0eWxlOiBjb25zdCBUZXh0U3R5bGUoZm9udFNpemU6IDIwKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICApLAogICAgICAgICAgICBjb25zdCBTaXplZEJveCgKICAgICAgICAgICAgICBoZWlnaHQ6IDIwLjAsCiAgICAgICAgICAgICksCiAgICAgICAgICAgIGNvbnN0IFBhZGRpbmcoCiAgICAgICAgICAgICAgcGFkZGluZzogRWRnZUluc2V0cy5hbGwoMjAuMCksCiAgICAgICAgICAgICAgY2hpbGQ6IFRleHQoCiAgICAgICAgICAgICAgICAgICdVc2UgdGhpcyBidXR0b24gdG8gaW52aXRlIGFueSBvZiB5b3VyIGNvbnRhY3RzIHRvIHRoaXMgYXBwIHVzaW5nIHRoZWlyIGVtYWlsIG9yIHBob25lIG51bWJlcicpLAogICAgICAgICAgICApLAogICAgICAgICAgICBjb25zdCBTaXplZEJveCgKICAgICAgICAgICAgICBoZWlnaHQ6IDEwLjAsCiAgICAgICAgICAgICksCiAgICAgICAgICAgIFRleHRCdXR0b24oCiAgICAgICAgICAgICAgc3R5bGU6IEJ1dHRvblN0eWxlKAogICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOgogICAgICAgICAgICAgICAgICAgIE1hdGVyaWFsU3RhdGVQcm9wZXJ0eS5hbGw8Q29sb3I+KENvbG9ycy5ibGFjazEyKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIG9uUHJlc3NlZDogKCkgewogICAgICAgICAgICAgICAgc2hhcmVBbmRJbnZpdGUoY29udGV4dCwgJ3dlbGNvbWUnKTsKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGNoaWxkOiBjb25zdCBUZXh0KAogICAgICAgICAgICAgICAgJ1NoYXJlIHdpdGggYSBmcmllbmQnLAogICAgICAgICAgICAgICAgc3R5bGU6IFRleHRTdHlsZShjb2xvcjogQ29sb3JzLmJsYWNrKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICApLAogICAgICAgICAgICBjb25zdCBTaXplZEJveCgKICAgICAgICAgICAgICBoZWlnaHQ6IDEwLjAsCiAgICAgICAgICAgICksCiAgICAgICAgICAgIFRleHRCdXR0b24oCiAgICAgICAgICAgICAgc3R5bGU6IEJ1dHRvblN0eWxlKAogICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOgogICAgICAgICAgICAgICAgICAgIE1hdGVyaWFsU3RhdGVQcm9wZXJ0eS5hbGw8Q29sb3I+KENvbG9ycy5ibGFjazEyKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIG9uUHJlc3NlZDogKCkgewogICAgICAgICAgICAgICAgX2NoZWNrRm9ySW52aXRlKCk7CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBjaGlsZDogY29uc3QgVGV4dCgKICAgICAgICAgICAgICAgICdDaGVjayBmb3IgaW52aXRlJywKICAgICAgICAgICAgICAgIHN0eWxlOiBUZXh0U3R5bGUoY29sb3I6IENvbG9ycy5ibGFjayksCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgKSwKICAgICAgICAgIF0sCiAgICAgICAgKSwKICAgICAgKSwKICAgICk7CiAgfQoKICB2b2lkIGluaXRpYWxpemVJbnZpdGF0aW9uV2lkZ2V0KCkgYXN5bmMgewogICAgdmFyIGN1cnJlbnRBdFNpZ24gPSBhdENsaWVudE1hbmFnZXIuYXRDbGllbnQuZ2V0Q3VycmVudEF0U2lnbigpOwogICAgc2V0U3RhdGUoKCkgewogICAgICBhY3RpdmVBdFNpZ24gPSBjdXJyZW50QXRTaWduID8/ICcnOwogICAgfSk7CiAgICBpbml0aWFsaXplSW52aXRhdGlvblNlcnZpY2UoCiAgICAgICAgbmF2a2V5OiBzY2FmZm9sZEtleSwKICAgICAgICB3ZWJQYWdlOiBNaXhlZENvbnN0YW50cy5jb29raWVQYWdlLAogICAgICAgIHJvb3REb21haW46IEF0RW52LnJvb3REb21haW4pOwogIH0KCiAgdm9pZCBfY2hlY2tGb3JJbnZpdGUoKSBhc3luYyB7CiAgICBTdHJpbmcgX3VybCA9IE1peGVkQ29uc3RhbnRzLmNvb2tpZVBhZ2U7CiAgICBhd2FpdCBjYW5MYXVuY2goX3VybCkKICAgICAgICA/IGF3YWl0IGxhdW5jaChfdXJsLCBmb3JjZVNhZmFyaVZDOiBmYWxzZSkKICAgICAgICA6IHRocm93ICdDb3VsZCBub3QgbGF1bmNoICRfdXJsJzsKICB9CgogIHZvaWQgX2hhbmRsZUluY29taW5nTGlua3MoKSB7CiAgICAvLyBJdCB3aWxsIGhhbmRsZSBhcHAgbGlua3Mgd2hpbGUgdGhlIGFwcCBpcyBhbHJlYWR5IHN0YXJ0ZWQgLSBiZSBpdCBpbgogICAgLy8gdGhlIGZvcmVncm91bmQgb3IgaW4gdGhlIGJhY2tncm91bmQuCiAgICB1cmlMaW5rU3RyZWFtLmxpc3RlbigoVXJpPyB1cmkpIHsKICAgICAgaWYgKG1vdW50ZWQpIHsKICAgICAgICBpZiAodXJpICE9IG51bGwpIHsKICAgICAgICAgIHZhciBxdWVyeVBhcmFtZXRlcnMgPSB1cmkucXVlcnlQYXJhbWV0ZXJzOwogICAgICAgICAgZmV0Y2hJbnZpdGVEYXRhKGNvbnRleHQsIHF1ZXJ5UGFyYW1ldGVyc1sna2V5J10gPz8gJycsCiAgICAgICAgICAgICAgcXVlcnlQYXJhbWV0ZXJzWydhdHNpZ24nXSA/PyAnJyk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBvbkVycm9yOiAoT2JqZWN0IGVycikgewogICAgICBfbG9nZ2VyLnNldmVyZSgnRXJyb3IgaW4gaW5jb21pbmcgbGlua3M6ICR7ZXJyLnRvU3RyaW5nKCl9Jyk7CiAgICB9KTsKICB9Cn0K",
      "type": "text"
    },
    {
      "path": "lib/main.dart",
      "data":
          "aW1wb3J0ICdkYXJ0OmFzeW5jJzsKCmltcG9ydCAncGFja2FnZTphdF9vbmJvYXJkaW5nX2ZsdXR0ZXIvYXRfb25ib2FyZGluZ19mbHV0dGVyLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmF0X2NsaWVudF9tb2JpbGUvYXRfY2xpZW50X21vYmlsZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmF0X3V0aWxzL2F0X2xvZ2dlci5kYXJ0JyBzaG93IEF0U2lnbkxvZ2dlcjsKaW1wb3J0ICdwYWNrYWdlOnBhdGhfcHJvdmlkZXIvcGF0aF9wcm92aWRlci5kYXJ0JyBzaG93IGdldEFwcGxpY2F0aW9uU3VwcG9ydERpcmVjdG9yeTsKaW1wb3J0ICdwYWNrYWdlOmF0X2FwcF9mbHV0dGVyL2F0X2FwcF9mbHV0dGVyLmRhcnQnIHNob3cgQXRFbnY7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyX2tleWNoYWluL2ZsdXR0ZXJfa2V5Y2hhaW4uZGFydCc7CgppbXBvcnQgJ2hvbWVfc2NyZWVuLmRhcnQnOwoKRnV0dXJlPHZvaWQ+IG1haW4oKSBhc3luYyB7CiAgYXdhaXQgQXRFbnYubG9hZCgpOwogIHJ1bkFwcChjb25zdCBNeUFwcCgpKTsKfQoKRnV0dXJlPEF0Q2xpZW50UHJlZmVyZW5jZT4gbG9hZEF0Q2xpZW50UHJlZmVyZW5jZSgpIGFzeW5jIHsKICB2YXIgZGlyID0gYXdhaXQgZ2V0QXBwbGljYXRpb25TdXBwb3J0RGlyZWN0b3J5KCk7CiAgcmV0dXJuIEF0Q2xpZW50UHJlZmVyZW5jZSgpCiAgICAuLnJvb3REb21haW4gPSBBdEVudi5yb290RG9tYWluCiAgICAuLm5hbWVzcGFjZSA9IEF0RW52LmFwcE5hbWVzcGFjZQogICAgLi5oaXZlU3RvcmFnZVBhdGggPSBkaXIucGF0aAogICAgLi5jb21taXRMb2dQYXRoID0gZGlyLnBhdGgKICAgIC4uaXNMb2NhbFN0b3JlUmVxdWlyZWQgPSB0cnVlOwp9CgpjbGFzcyBNeUFwcCBleHRlbmRzIFN0YXRlZnVsV2lkZ2V0IHsKICBjb25zdCBNeUFwcCh7S2V5PyBrZXl9KSA6IHN1cGVyKGtleToga2V5KTsKICBAb3ZlcnJpZGUKICBfTXlBcHBTdGF0ZSBjcmVhdGVTdGF0ZSgpID0+IF9NeUFwcFN0YXRlKCk7Cn0KCmNsYXNzIF9NeUFwcFN0YXRlIGV4dGVuZHMgU3RhdGU8TXlBcHA+IHsKICAvLyAqIGxvYWQgdGhlIEF0Q2xpZW50UHJlZmVyZW5jZSBpbiB0aGUgYmFja2dyb3VuZAogIEZ1dHVyZTxBdENsaWVudFByZWZlcmVuY2U+IGZ1dHVyZVByZWZlcmVuY2UgPSBsb2FkQXRDbGllbnRQcmVmZXJlbmNlKCk7CiAgbGF0ZSBBdENsaWVudFByZWZlcmVuY2UgYXRDbGllbnRQcmVmZXJlbmNlOwogIEF0Q2xpZW50U2VydmljZT8gYXRDbGllbnRTZXJ2aWNlOwoKICBmaW5hbCBBdFNpZ25Mb2dnZXIgX2xvZ2dlciA9IEF0U2lnbkxvZ2dlcihBdEVudi5hcHBOYW1lc3BhY2UpOwoKICBAb3ZlcnJpZGUKICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsKICAgIHJldHVybiBNYXRlcmlhbEFwcCgKICAgICAgLy8gKiBUaGUgb25ib2FyZGluZyBzY3JlZW4gKGZpcnN0IHNjcmVlbikKICAgICAgaG9tZTogU2NhZmZvbGQoCiAgICAgICAgICBhcHBCYXI6IEFwcEJhcigKICAgICAgICAgICAgdGl0bGU6IGNvbnN0IFRleHQoJ1BsdWdpbiBleGFtcGxlIGFwcCcpLAogICAgICAgICAgKSwKICAgICAgICAgIGJvZHk6IEJ1aWxkZXIoCiAgICAgICAgICAgIGJ1aWxkZXI6IChjb250ZXh0KSA9PiBDb2x1bW4oCiAgICAgICAgICAgICAgY2hpbGRyZW46IFsKICAgICAgICAgICAgICAgIGNvbnN0IFNpemVkQm94KAogICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1LAogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIENvbnRhaW5lcigKICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiBjb25zdCBFZGdlSW5zZXRzLmFsbCgxMC4wKSwKICAgICAgICAgICAgICAgICAgICBjaGlsZDogY29uc3QgQ2VudGVyKAogICAgICAgICAgICAgICAgICAgICAgY2hpbGQ6IFRleHQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgJ0EgY2xpZW50IHNlcnZpY2Ugc2hvdWxkIGNyZWF0ZSBhbiBhdENsaWVudCBpbnN0YW5jZSBhbmQgY2FsbCBvbmJvYXJkIG1ldGhvZCBiZWZvcmUgbmF2aWdhdGluZyB0byBRUiBzY2FubmVyIHNjcmVlbicsCiAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduOiBUZXh0QWxpZ24uY2VudGVyKSwKICAgICAgICAgICAgICAgICAgICApKSwKICAgICAgICAgICAgICAgIGNvbnN0IFNpemVkQm94KAogICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1LAogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIENlbnRlcigKICAgICAgICAgICAgICAgICAgY2hpbGQ6IEVsZXZhdGVkQnV0dG9uKAogICAgICAgICAgICAgICAgICAgIG9uUHJlc3NlZDogKCkgYXN5bmMgewogICAgICAgICAgICAgICAgICAgICAgQXRPbmJvYXJkaW5nUmVzdWx0IG9uYm9hcmRpbmdSZXN1bHQgPSBhd2FpdCBBdE9uYm9hcmRpbmcub25ib2FyZCgKICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGV4dCwKICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlnOiBBdE9uYm9hcmRpbmdDb25maWcoCiAgICAgICAgICAgICAgICAgICAgICAgICAgYXRDbGllbnRQcmVmZXJlbmNlOiBhd2FpdCBmdXR1cmVQcmVmZXJlbmNlLAogICAgICAgICAgICAgICAgICAgICAgICAgIHJvb3RFbnZpcm9ubWVudDogQXRFbnYucm9vdEVudmlyb25tZW50LAogICAgICAgICAgICAgICAgICAgICAgICAgIGRvbWFpbjogQXRFbnYucm9vdERvbWFpbiwKICAgICAgICAgICAgICAgICAgICAgICAgICBhcHBBUElLZXk6IEF0RW52LmFwcEFwaUtleSwKICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKG9uYm9hcmRpbmdSZXN1bHQuc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgQXRPbmJvYXJkaW5nUmVzdWx0U3RhdHVzLnN1Y2Nlc3M6CiAgICAgICAgICAgICAgICAgICAgICAgICAgTmF2aWdhdG9yLnB1c2goY29udGV4dCwgTWF0ZXJpYWxQYWdlUm91dGUoYnVpbGRlcjogKF8pID0+IGNvbnN0IEhvbWVTY3JlZW4oKSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIEF0T25ib2FyZGluZ1Jlc3VsdFN0YXR1cy5lcnJvcjoKICAgICAgICAgICAgICAgICAgICAgICAgICBTY2FmZm9sZE1lc3Nlbmdlci5vZihjb250ZXh0KS5zaG93U25hY2tCYXIoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBTbmFja0JhcigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBDb2xvcnMucmVkLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBUZXh0KCdBbiBlcnJvciBoYXMgb2NjdXJyZWQnKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBBdE9uYm9hcmRpbmdSZXN1bHRTdGF0dXMuY2FuY2VsOgogICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgY2hpbGQ6IGNvbnN0IFRleHQoJ09uYm9hcmQgYW4gQHNpZ24nKSwKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBjb25zdCBTaXplZEJveCgKICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyNSwKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBDZW50ZXIoCiAgICAgICAgICAgICAgICAgIGNoaWxkOiBUZXh0QnV0dG9uKAogICAgICAgICAgICAgICAgICAgIHN0eWxlOiBCdXR0b25TdHlsZSgKICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogTWF0ZXJpYWxTdGF0ZVByb3BlcnR5LmFsbDxDb2xvcj4oQ29sb3JzLmJsYWNrMTIpLAogICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgb25QcmVzc2VkOiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICBGbHV0dGVyS2V5Y2hhaW4ucmVtb3ZlKGtleTogJ0BhdHNpZ24nKTsKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGNoaWxkOiBjb25zdCBUZXh0KAogICAgICAgICAgICAgICAgICAgICAgJ0NsZWFyIHBhaXJlZCBhdHNpZ25zJywKICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBUZXh0U3R5bGUoY29sb3I6IENvbG9ycy5ibGFjayksCiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgKSwKICAgICAgICAgICkpLAogICAgKTsKICB9Cn0K",
      "type": "text"
    }
  ],
  "hooks": [],
  "name": "at_invitation_flutter",
  "description": "A sample of how to use the at_invitation_flutter package",
  "version": "0.1.0",
  "environment": {"mason": "any"},
  "vars": {}
});
