// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: prefer_single_quotes, public_member_api_docs, lines_longer_than_80_chars, implicit_dynamic_list_literal, implicit_dynamic_map_literal

import 'package:mason/mason.dart';

final atEventsFlutterBundle = MasonBundle.fromJson(<String, dynamic>{
  "files": [
    {
      "path": "lib\\main.dart",
      "data":
          "aW1wb3J0ICdkYXJ0OmFzeW5jJzsNCg0KaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7DQppbXBvcnQgJ3BhY2thZ2U6YXRfY2xpZW50X21vYmlsZS9hdF9jbGllbnRfbW9iaWxlLmRhcnQnOw0KaW1wb3J0ICdwYWNrYWdlOmF0X29uYm9hcmRpbmdfZmx1dHRlci9hdF9vbmJvYXJkaW5nX2ZsdXR0ZXIuZGFydCcNCiAgICBzaG93IE9uYm9hcmRpbmc7DQppbXBvcnQgJ3BhY2thZ2U6YXRfdXRpbHMvYXRfbG9nZ2VyLmRhcnQnIHNob3cgQXRTaWduTG9nZ2VyOw0KaW1wb3J0ICdwYWNrYWdlOnBhdGhfcHJvdmlkZXIvcGF0aF9wcm92aWRlci5kYXJ0Jw0KICAgIHNob3cgZ2V0QXBwbGljYXRpb25TdXBwb3J0RGlyZWN0b3J5Ow0KaW1wb3J0ICdwYWNrYWdlOmF0X2FwcF9mbHV0dGVyL2F0X2FwcF9mbHV0dGVyLmRhcnQnIHNob3cgQXRFbnY7DQoNCmltcG9ydCAnc2Vjb25kX3NjcmVlbi5kYXJ0JzsNCg0KRnV0dXJlPHZvaWQ+IG1haW4oKSBhc3luYyB7DQogIGF3YWl0IEF0RW52LmxvYWQoKTsNCiAgcnVuQXBwKGNvbnN0IE15QXBwKCkpOw0KfQ0KDQpGdXR1cmU8QXRDbGllbnRQcmVmZXJlbmNlPiBsb2FkQXRDbGllbnRQcmVmZXJlbmNlKCkgYXN5bmMgew0KICB2YXIgZGlyID0gYXdhaXQgZ2V0QXBwbGljYXRpb25TdXBwb3J0RGlyZWN0b3J5KCk7DQogIHJldHVybiBBdENsaWVudFByZWZlcmVuY2UoKQ0KICAgICAgICAuLnJvb3REb21haW4gPSBBdEVudi5yb290RG9tYWluDQogICAgICAgIC4ubmFtZXNwYWNlID0gQXRFbnYuYXBwTmFtZXNwYWNlDQogICAgICAgIC4uaGl2ZVN0b3JhZ2VQYXRoID0gZGlyLnBhdGgNCiAgICAgICAgLi5jb21taXRMb2dQYXRoID0gZGlyLnBhdGgNCiAgICAgICAgLi5pc0xvY2FsU3RvcmVSZXF1aXJlZCA9IHRydWUNCiAgICAgIC8vIGlnbm9yZTogdG9kbw0KICAgICAgLy8gVE9ETyBzZXQgdGhlIHJlc3Qgb2YgeW91ciBBdENsaWVudFByZWZlcmVuY2UgaGVyZQ0KICAgICAgOw0KfQ0KDQpjbGFzcyBNeUFwcCBleHRlbmRzIFN0YXRlZnVsV2lkZ2V0IHsNCiAgY29uc3QgTXlBcHAoe0tleT8ga2V5fSkgOiBzdXBlcihrZXk6IGtleSk7DQogIEBvdmVycmlkZQ0KICBfTXlBcHBTdGF0ZSBjcmVhdGVTdGF0ZSgpID0+IF9NeUFwcFN0YXRlKCk7DQp9DQoNCmNsYXNzIF9NeUFwcFN0YXRlIGV4dGVuZHMgU3RhdGU8TXlBcHA+IHsNCiAgLy8gKiBsb2FkIHRoZSBBdENsaWVudFByZWZlcmVuY2UgaW4gdGhlIGJhY2tncm91bmQNCiAgRnV0dXJlPEF0Q2xpZW50UHJlZmVyZW5jZT4gZnV0dXJlUHJlZmVyZW5jZSA9IGxvYWRBdENsaWVudFByZWZlcmVuY2UoKTsNCiAgQXRDbGllbnRQcmVmZXJlbmNlPyBhdENsaWVudFByZWZlcmVuY2U7DQogIEF0Q2xpZW50U2VydmljZT8gYXRDbGllbnRTZXJ2aWNlOw0KDQogIGZpbmFsIEF0U2lnbkxvZ2dlciBfbG9nZ2VyID0gQXRTaWduTG9nZ2VyKEF0RW52LmFwcE5hbWVzcGFjZSk7DQoNCiAgQG92ZXJyaWRlDQogIFdpZGdldCBidWlsZChCdWlsZENvbnRleHQgY29udGV4dCkgew0KICAgIHJldHVybiBNYXRlcmlhbEFwcCgNCiAgICAgIC8vICogVGhlIG9uYm9hcmRpbmcgc2NyZWVuIChmaXJzdCBzY3JlZW4pDQogICAgICBuYXZpZ2F0b3JLZXk6IE5hdlNlcnZpY2UubmF2S2V5LA0KICAgICAgaG9tZTogU2NhZmZvbGQoDQogICAgICAgICAgYXBwQmFyOiBBcHBCYXIoDQogICAgICAgICAgICB0aXRsZTogY29uc3QgVGV4dCgnYXRfZXZlbnRzX2ZsdXR0ZXIgZXhhbXBsZSBhcHAnKSwNCiAgICAgICAgICApLA0KICAgICAgICAgIGJvZHk6IEJ1aWxkZXIoDQogICAgICAgICAgICBidWlsZGVyOiAoY29udGV4dCkgPT4gQ29sdW1uKA0KICAgICAgICAgICAgICBjaGlsZHJlbjogWw0KICAgICAgICAgICAgICAgIGNvbnN0IFNpemVkQm94KA0KICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyNSwNCiAgICAgICAgICAgICAgICApLA0KICAgICAgICAgICAgICAgIENlbnRlcigNCiAgICAgICAgICAgICAgICAgIGNoaWxkOiBFbGV2YXRlZEJ1dHRvbigNCiAgICAgICAgICAgICAgICAgICAgb25QcmVzc2VkOiAoKSBhc3luYyB7DQogICAgICAgICAgICAgICAgICAgICAgdmFyIHByZWZlcmVuY2UgPSBhd2FpdCBmdXR1cmVQcmVmZXJlbmNlOw0KICAgICAgICAgICAgICAgICAgICAgIHNldFN0YXRlKCgpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGF0Q2xpZW50UHJlZmVyZW5jZSA9IHByZWZlcmVuY2U7DQogICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgT25ib2FyZGluZygNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQ6IGNvbnRleHQsDQogICAgICAgICAgICAgICAgICAgICAgICBhdENsaWVudFByZWZlcmVuY2U6IGF0Q2xpZW50UHJlZmVyZW5jZSEsDQogICAgICAgICAgICAgICAgICAgICAgICBkb21haW46IEF0RW52LnJvb3REb21haW4sDQogICAgICAgICAgICAgICAgICAgICAgICByb290RW52aXJvbm1lbnQ6IEF0RW52LnJvb3RFbnZpcm9ubWVudCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGFwcEFQSUtleTogJzQ3N2ItODc2dS1iY2V6LWM0MnotNmEzZCcsDQogICAgICAgICAgICAgICAgICAgICAgICBvbmJvYXJkOiAoTWFwPFN0cmluZz8sIEF0Q2xpZW50U2VydmljZT4gdmFsdWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RyaW5nPyBhdHNpZ24pIGFzeW5jIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgYXRDbGllbnRTZXJ2aWNlID0gdmFsdWVbYXRzaWduXTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgTmF2aWdhdG9yLnB1c2hSZXBsYWNlbWVudCgNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYXRlcmlhbFBhZ2VSb3V0ZSgNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidWlsZGVyOiAoY29udGV4dCkgPT4gY29uc3QgU2Vjb25kU2NyZWVuKCkpKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBvbkVycm9yOiAoZXJyb3IpIGFzeW5jIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2xvZ2dlci5zZXZlcmUoJ09uYm9hcmRpbmcgdGhyb3dzICRlcnJvciBlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBzaG93RGlhbG9nKA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1aWxkZXI6IChCdWlsZENvbnRleHQgY29udGV4dCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gQWxlcnREaWFsb2coDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogY29uc3QgVGV4dCgnU29tZXRoaW5nIHdlbnQgd3JvbmcnKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb25zOiBbDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUZXh0QnV0dG9uKA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uUHJlc3NlZDogKCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmF2aWdhdG9yLm9mKGNvbnRleHQpLnBvcCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQ6IGNvbnN0IFRleHQoJ29rJykpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICApOw0KICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICBjaGlsZDogY29uc3QgVGV4dCgnU3RhcnQgb25ib2FyZGluZycpLA0KICAgICAgICAgICAgICAgICAgKSwNCiAgICAgICAgICAgICAgICApLA0KICAgICAgICAgICAgICAgIGNvbnN0IFNpemVkQm94KA0KICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyNSwNCiAgICAgICAgICAgICAgICApLA0KICAgICAgICAgICAgICAgIENlbnRlcigNCiAgICAgICAgICAgICAgICAgIGNoaWxkOiBUZXh0QnV0dG9uKA0KICAgICAgICAgICAgICAgICAgICBzdHlsZTogQnV0dG9uU3R5bGUoDQogICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOg0KICAgICAgICAgICAgICAgICAgICAgICAgICBNYXRlcmlhbFN0YXRlUHJvcGVydHkuYWxsPENvbG9yPihDb2xvcnMuYmxhY2sxMiksDQogICAgICAgICAgICAgICAgICAgICksDQogICAgICAgICAgICAgICAgICAgIG9uUHJlc3NlZDogKCkgYXN5bmMgew0KICAgICAgICAgICAgICAgICAgICAgIHZhciBfYXRzaWduc0xpc3QgPSBhd2FpdCBLZXljaGFpblV0aWwuZ2V0QXRzaWduTGlzdCgpOw0KICAgICAgICAgICAgICAgICAgICAgIGZvciAoU3RyaW5nIGF0c2lnbiBpbiAoX2F0c2lnbnNMaXN0ID8/IFtdKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgS2V5Y2hhaW5VdGlsLnJlc2V0QXRTaWduRnJvbUtleWNoYWluKGF0c2lnbik7DQogICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgU2NhZmZvbGRNZXNzZW5nZXIub2YoY29udGV4dCkuc2hvd1NuYWNrQmFyKGNvbnN0IFNuYWNrQmFyKA0KICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBUZXh0KCdDbGVhcmVkIGFsbCBwYWlyZWQgYXRzaWducycpKSk7DQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgIGNoaWxkOiBjb25zdCBUZXh0KCdDbGVhciBwYWlyZWQgYXRzaWducycsDQogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogVGV4dFN0eWxlKGNvbG9yOiBDb2xvcnMuYmxhY2spKSwNCiAgICAgICAgICAgICAgICAgICksDQogICAgICAgICAgICAgICAgKSwNCiAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICksDQogICAgICAgICAgKSksDQogICAgKTsNCiAgfQ0KfQ0KDQpjbGFzcyBOYXZTZXJ2aWNlIHsNCiAgc3RhdGljIEdsb2JhbEtleTxOYXZpZ2F0b3JTdGF0ZT4gbmF2S2V5ID0gR2xvYmFsS2V5KCk7DQp9DQo=",
      "type": "text"
    },
    {
      "path": "lib\\second_screen.dart",
      "data":
          "aW1wb3J0ICdwYWNrYWdlOmF0X2V2ZW50c19mbHV0dGVyL2F0X2V2ZW50c19mbHV0dGVyLmRhcnQnOw0KaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7DQppbXBvcnQgJ3BhY2thZ2U6YXRfY2xpZW50X21vYmlsZS9hdF9jbGllbnRfbW9iaWxlLmRhcnQnOw0KDQppbXBvcnQgJ21haW4uZGFydCc7DQppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9kb3RlbnYvZmx1dHRlcl9kb3RlbnYuZGFydCcgc2hvdyBkb3RlbnY7DQoNCmNsYXNzIFNlY29uZFNjcmVlbiBleHRlbmRzIFN0YXRlZnVsV2lkZ2V0IHsNCiAgY29uc3QgU2Vjb25kU2NyZWVuKHtLZXk/IGtleX0pIDogc3VwZXIoa2V5OiBrZXkpOw0KDQogIEBvdmVycmlkZQ0KICBfU2Vjb25kU2NyZWVuU3RhdGUgY3JlYXRlU3RhdGUoKSA9PiBfU2Vjb25kU2NyZWVuU3RhdGUoKTsNCn0NCg0KY2xhc3MgX1NlY29uZFNjcmVlblN0YXRlIGV4dGVuZHMgU3RhdGU8U2Vjb25kU2NyZWVuPiB7DQogIFN0cmluZz8gYWN0aXZlQXRTaWduOw0KICBHbG9iYWxLZXk8U2NhZmZvbGRTdGF0ZT4/IHNjYWZmb2xkS2V5Ow0KICBib29sPyBpc0F1dGhlbnRpY2F0ZWQ7DQogIExpc3Q8RXZlbnRLZXlMb2NhdGlvbk1vZGVsPiBldmVudHMgPSBbXTsNCg0KICAvLy8gR2V0IHRoZSBBdENsaWVudE1hbmFnZXIgaW5zdGFuY2UNCiAgdmFyIGF0Q2xpZW50TWFuYWdlciA9IEF0Q2xpZW50TWFuYWdlci5nZXRJbnN0YW5jZSgpOw0KICBsYXRlIEF0Q2xpZW50UHJlZmVyZW5jZSBhdENsaWVudFByZWZlcmVuY2U7DQogIEBvdmVycmlkZQ0KICB2b2lkIGluaXRTdGF0ZSgpIHsNCiAgICBzY2FmZm9sZEtleSA9IEdsb2JhbEtleTxTY2FmZm9sZFN0YXRlPigpOw0KICAgIHN1cGVyLmluaXRTdGF0ZSgpOw0KDQogICAgdHJ5IHsNCiAgICAgIGFjdGl2ZUF0U2lnbiA9IGF0Q2xpZW50TWFuYWdlci5hdENsaWVudC5nZXRDdXJyZW50QXRTaWduKCk7DQogICAgICBpbml0aWFsaXplRXZlbnRTZXJ2aWNlKCk7DQogICAgICBpc0F1dGhlbnRpY2F0ZWQgPSB0cnVlOw0KICAgIH0gY2F0Y2ggKGUpIHsNCiAgICAgIGlzQXV0aGVudGljYXRlZCA9IGZhbHNlOw0KICAgICAgV2lkZ2V0c0JpbmRpbmcuaW5zdGFuY2UuYWRkUG9zdEZyYW1lQ2FsbGJhY2soKHRpbWVTdGFtcCkgew0KICAgICAgICBzaG93RGlhbG9nKA0KICAgICAgICAgIGNvbnRleHQ6IGNvbnRleHQsDQogICAgICAgICAgYnVpbGRlcjogKEJ1aWxkQ29udGV4dCBjb250ZXh0KSB7DQogICAgICAgICAgICByZXR1cm4gYWxlcnREaWFsb2dDb250ZW50KCk7DQogICAgICAgICAgfSwNCiAgICAgICAgKTsNCiAgICAgIH0pOw0KICAgIH0NCiAgfQ0KDQogIHZvaWQgdXBkYXRlRXZlbnRzKExpc3Q8RXZlbnRLZXlMb2NhdGlvbk1vZGVsPiBfZXZlbnRzKSB7DQogICAgc2V0U3RhdGUoKCkgew0KICAgICAgZXZlbnRzID0gX2V2ZW50czsNCiAgICB9KTsNCiAgfQ0KDQogIEBvdmVycmlkZQ0KICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsNCiAgICByZXR1cm4gU2NhZmZvbGQoDQogICAgICBrZXk6IHNjYWZmb2xkS2V5LA0KICAgICAgcmVzaXplVG9Bdm9pZEJvdHRvbUluc2V0OiBmYWxzZSwNCiAgICAgIGFwcEJhcjogQXBwQmFyKHRpdGxlOiBjb25zdCBUZXh0KCdTZWNvbmQgU2NyZWVuJykpLA0KICAgICAgYm9keTogQ29sdW1uKA0KICAgICAgICBjcm9zc0F4aXNBbGlnbm1lbnQ6IENyb3NzQXhpc0FsaWdubWVudC5jZW50ZXIsDQogICAgICAgIGNoaWxkcmVuOiBbDQogICAgICAgICAgY29uc3QgU2l6ZWRCb3goDQogICAgICAgICAgICBoZWlnaHQ6IDIwLjAsDQogICAgICAgICAgKSwNCiAgICAgICAgICBDb250YWluZXIoDQogICAgICAgICAgICBwYWRkaW5nOiBjb25zdCBFZGdlSW5zZXRzLm9ubHkodG9wOiAyMC4wLCBib3R0b206IDIwLjApLA0KICAgICAgICAgICAgY2hpbGQ6IENlbnRlcigNCiAgICAgICAgICAgICAgY2hpbGQ6IFRleHQoDQogICAgICAgICAgICAgICAgJ1dlbGNvbWUgJGFjdGl2ZUF0U2lnbiEnLA0KICAgICAgICAgICAgICAgIHN0eWxlOiBjb25zdCBUZXh0U3R5bGUoZm9udFNpemU6IDIwKSwNCiAgICAgICAgICAgICAgKSwNCiAgICAgICAgICAgICksDQogICAgICAgICAgKSwNCiAgICAgICAgICBjb25zdCBTaXplZEJveCgNCiAgICAgICAgICAgIGhlaWdodDogMjAuMCwNCiAgICAgICAgICApLA0KICAgICAgICAgIFRleHRCdXR0b24oDQogICAgICAgICAgICBvblByZXNzZWQ6ICgpIHsNCiAgICAgICAgICAgICAgYm90dG9tU2hlZXQoQ3JlYXRlRXZlbnQoYXRDbGllbnRNYW5hZ2VyKSwNCiAgICAgICAgICAgICAgICAgIE1lZGlhUXVlcnkub2YoY29udGV4dCkuc2l6ZS5oZWlnaHQgKiAwLjkpOw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGNoaWxkOiBjb25zdCBTaXplZEJveCgNCiAgICAgICAgICAgICAgaGVpZ2h0OiA0MCwNCiAgICAgICAgICAgICAgY2hpbGQ6DQogICAgICAgICAgICAgICAgICBUZXh0KCdDcmVhdGUgZXZlbnQnLCBzdHlsZTogVGV4dFN0eWxlKGNvbG9yOiBDb2xvcnMuYmxhY2spKSwNCiAgICAgICAgICAgICksDQogICAgICAgICAgKSwNCiAgICAgICAgICBjb25zdCBTaXplZEJveCgNCiAgICAgICAgICAgIGhlaWdodDogMjAuMCwNCiAgICAgICAgICApLA0KICAgICAgICAgIEV4cGFuZGVkKA0KICAgICAgICAgICAgY2hpbGQ6IExpc3RWaWV3LnNlcGFyYXRlZCgNCiAgICAgICAgICAgICAgICBpdGVtQnVpbGRlcjogKEJ1aWxkQ29udGV4dCBjb250ZXh0LCBpbnQgaW5kZXgpIHsNCiAgICAgICAgICAgICAgICAgIHJldHVybiBJbmtXZWxsKA0KICAgICAgICAgICAgICAgICAgICBvblRhcDogKCkgew0KICAgICAgICAgICAgICAgICAgICAgIEhvbWVFdmVudFNlcnZpY2UoKS5vbkV2ZW50TW9kZWxUYXAoDQogICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50c1tpbmRleF0uZXZlbnROb3RpZmljYXRpb25Nb2RlbCEsDQogICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50c1tpbmRleF0uaGF2ZVJlc3BvbmRlZCk7DQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgIGNoaWxkOiBEaXNwbGF5VGlsZSgNCiAgICAgICAgICAgICAgICAgICAgICBhdHNpZ25DcmVhdG9yOg0KICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudHNbaW5kZXhdLmV2ZW50Tm90aWZpY2F0aW9uTW9kZWwhLmF0c2lnbkNyZWF0b3IsDQogICAgICAgICAgICAgICAgICAgICAgbnVtYmVyOiBldmVudHNbaW5kZXhdDQogICAgICAgICAgICAgICAgICAgICAgICAgIC5ldmVudE5vdGlmaWNhdGlvbk1vZGVsIQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAuZ3JvdXAhDQogICAgICAgICAgICAgICAgICAgICAgICAgIC5tZW1iZXJzIQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnRXZlbnQgLSAnICsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRzW2luZGV4XS5ldmVudE5vdGlmaWNhdGlvbk1vZGVsIS50aXRsZSEsDQogICAgICAgICAgICAgICAgICAgICAgc3ViVGl0bGU6IEhvbWVFdmVudFNlcnZpY2UoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAuZ2V0U3ViVGl0bGUoZXZlbnRzW2luZGV4XS5ldmVudE5vdGlmaWNhdGlvbk1vZGVsISksDQogICAgICAgICAgICAgICAgICAgICAgc2VtaVRpdGxlOiBIb21lRXZlbnRTZXJ2aWNlKCkuZ2V0U2VtaVRpdGxlKA0KICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudHNbaW5kZXhdLmV2ZW50Tm90aWZpY2F0aW9uTW9kZWwhLA0KICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudHNbaW5kZXhdLmhhdmVSZXNwb25kZWQpLA0KICAgICAgICAgICAgICAgICAgICAgIHNob3dSZXRyeToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgSG9tZUV2ZW50U2VydmljZSgpLmNhbGN1bGF0ZVNob3dSZXRyeShldmVudHNbaW5kZXhdKSwNCiAgICAgICAgICAgICAgICAgICAgICBvblJldHJ5VGFwcGVkOiAoKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBIb21lRXZlbnRTZXJ2aWNlKCkub25FdmVudE1vZGVsVGFwKA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50c1tpbmRleF0uZXZlbnROb3RpZmljYXRpb25Nb2RlbCEsIGZhbHNlKTsNCiAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICApLA0KICAgICAgICAgICAgICAgICAgKTsNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIHNlcGFyYXRvckJ1aWxkZXI6IChCdWlsZENvbnRleHQgY29udGV4dCwgaW50IGluZGV4KSB7DQogICAgICAgICAgICAgICAgICByZXR1cm4gY29uc3QgRGl2aWRlcigNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IENvbG9ycy5ncmV5LA0KICAgICAgICAgICAgICAgICAgKTsNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIGl0ZW1Db3VudDogZXZlbnRzLmxlbmd0aCksDQogICAgICAgICAgKQ0KICAgICAgICBdLA0KICAgICAgKSwNCiAgICApOw0KICB9DQoNCiAgdm9pZCBpbml0aWFsaXplRXZlbnRTZXJ2aWNlKCkgew0KICAgIGluaXRpYWxpc2VFdmVudFNlcnZpY2UoTmF2U2VydmljZS5uYXZLZXksDQogICAgICAgIG1hcEtleTogZG90ZW52LmdldCgnTUFQX0tFWScsIGZhbGxiYWNrOiAnJyksDQogICAgICAgIGFwaUtleTogZG90ZW52LmdldCgnQVBJX0tFWScsIGZhbGxiYWNrOiAnJyksDQogICAgICAgIHJvb3REb21haW46ICdyb290LmF0c2lnbi5vcmcnLA0KICAgICAgICBzdHJlYW1BbHRlcm5hdGl2ZTogdXBkYXRlRXZlbnRzKTsNCiAgfQ0KDQogIHZvaWQgYm90dG9tU2hlZXQoDQogICAgVCwNCiAgICBkb3VibGUgaGVpZ2h0LA0KICApIGFzeW5jIHsNCiAgICBhd2FpdCBzaG93TW9kYWxCb3R0b21TaGVldDx2b2lkPigNCiAgICAgICAgY29udGV4dDogY29udGV4dCwNCiAgICAgICAgaXNTY3JvbGxDb250cm9sbGVkOiB0cnVlLA0KICAgICAgICBzaGFwZTogY29uc3QgU3RhZGl1bUJvcmRlcigpLA0KICAgICAgICBidWlsZGVyOiAoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsNCiAgICAgICAgICByZXR1cm4gQ29udGFpbmVyKA0KICAgICAgICAgICAgaGVpZ2h0OiBoZWlnaHQsDQogICAgICAgICAgICBkZWNvcmF0aW9uOiBCb3hEZWNvcmF0aW9uKA0KICAgICAgICAgICAgICBjb2xvcjogVGhlbWUub2YoY29udGV4dCkuc2NhZmZvbGRCYWNrZ3JvdW5kQ29sb3IsDQogICAgICAgICAgICAgIGJvcmRlclJhZGl1czogY29uc3QgQm9yZGVyUmFkaXVzLm9ubHkoDQogICAgICAgICAgICAgICAgdG9wTGVmdDogUmFkaXVzLmNpcmN1bGFyKDEyLjApLA0KICAgICAgICAgICAgICAgIHRvcFJpZ2h0OiBSYWRpdXMuY2lyY3VsYXIoMTIuMCksDQogICAgICAgICAgICAgICksDQogICAgICAgICAgICApLA0KICAgICAgICAgICAgY2hpbGQ6IFQsDQogICAgICAgICAgKTsNCiAgICAgICAgfSk7DQogIH0NCg0KICBXaWRnZXQgYWxlcnREaWFsb2dDb250ZW50KCkgew0KICAgIHJldHVybiBBbGVydERpYWxvZygNCiAgICAgIHRpdGxlOiBjb25zdCBUZXh0KCd5b3UgYXJlIG5vdCBhdXRoZW50aWNhdGVkJyksDQogICAgICBhY3Rpb25zOiBbDQogICAgICAgIFRleHRCdXR0b24oDQogICAgICAgICAgb25QcmVzc2VkOiAoKSBhc3luYyB7DQogICAgICAgICAgICBOYXZpZ2F0b3Iub2YoY29udGV4dCkucG9wKCk7DQogICAgICAgICAgICBOYXZpZ2F0b3Iub2YoY29udGV4dCkucG9wKCk7DQogICAgICAgICAgfSwNCiAgICAgICAgICBjaGlsZDogY29uc3QgVGV4dCgnT2snLCBzdHlsZTogVGV4dFN0eWxlKGNvbG9yOiBDb2xvcnMuYmxhY2spKSwNCiAgICAgICAgKSwNCiAgICAgIF0sDQogICAgKTsNCiAgfQ0KfQ0K",
      "type": "text"
    }
  ],
  "hooks": [],
  "name": "at_events_flutter",
  "description": "A sample of how to use the at_events_flutter package",
  "version": "0.1.0",
  "environment": {"mason": "any"},
  "vars": {}
});
